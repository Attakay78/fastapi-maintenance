[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastapi-maintenance"
version = "0.1.0"
description = "Flexible maintenance mode middleware for FastAPI applications."
keywords = [
    "fastapi",
    "maintenance",
    "offline",
    "unavailable",
    "503",
]
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "Mehdi Samsami", email = "mehdisamsami@live.com" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: FastAPI",
    "Intended Audience :: Developers",
]
dependencies = [
    "fastapi>=0.99.0",
    "typing-extensions>=4.8.0 ; python_full_version < '3.10'",
]

[dependency-groups]
dev = [
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pre-commit>=3.5.0",
    "ruff>=0.11.8",
    "uvicorn[standard]>=0.33.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.13",
]
test = [
    "coverage>=7.6.1",
    "httpx>=0.28.1",
    "pytest>=8.3.5",
    "pytest-anyio>=0.0.0",
    "pytest-cov>=5.0.0",
]

[project.urls]
"Homepage" = "https://github.com/msamsami/fastapi-maintenance"
"Bug Tracker" = "https://github.com/msamsami/fastapi-maintenance/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["ignore"]

[tool.coverage.run]
parallel = true
data_file = "coverage/.coverage"
source = [
    "docs_src",
    "tests",
    "src/fastapi_maintenance"
]
context = '${CONTEXT}'
dynamic_context = "test_function"

[tool.coverage.report]
show_missing = true
sort = "-Cover"
omit = []

[tool.coverage.html]
show_contexts = true

[tool.mypy]
exclude=["tests", "examples"]
namespace_packages = false
files = ["src/fastapi_maintenance/**/*.py"]
check_untyped_defs = true
disable_error_code = ["empty-body", "unused-ignore"]
strict = true

[tool.ruff]
include = ["*.py", "*.pyi", "**/pyproject.toml"]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.isort]
atomic = true
profile = "black"
skip_gitignore = true
known_first_party = ["black", "blib2to3", "blackd", "_black_version"]

[tool.uv]
default-groups = ["dev", "docs", "test"]
